{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DataMaxi+ Python Client","text":"<p>This is the official implementation of Python client for DataMaxi+ API. The package can be used to fetch both historical and latest data using DataMaxi+ API. This package is compatible with Python v3.8+.</p> <ul> <li>Installation</li> <li>Configuration</li> <li>Environment Variables</li> <li>Quickstart</li> <li>Local Development</li> <li>Setup</li> <li>Testing</li> <li>Links</li> <li>Contributing</li> <li>License</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install datamaxi\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<p>Access to DataMaxi+ is protected by API Key. If you are interested to try DataMaxi+, you can request your API key at business@bisonai.com.</p> Option Explanation <code>api_key</code> Your API key <code>base_url</code> If <code>base_url</code> is not provided, it defaults to <code>api.datamaxiplus.com</code>. <code>timeout</code> Number of seconds to wait for a server response. By default requests do not time out. <code>proxies</code> Proxy through which the request is queried <code>show_limit_usage</code> Return response as dictionary including including <code>\"limit_usage\"</code> and <code>\"data\"</code> keys <code>show_header</code> Return response as dictionary including including <code>\"header\"</code> and <code>\"data\"</code> keys"},{"location":"#environment-variables","title":"Environment Variables","text":"<p>You may use environment variables to configure the DataMaxi+ client to avoid any inline boilerplate.</p> Env Description <code>NEVEREST_API_KEY</code> Used instead of <code>api_key</code> if none is passed."},{"location":"#quickstart","title":"Quickstart","text":"<p>DataMaxi+ Python package currently includes the following clients:</p> <ul> <li><code>Binance</code></li> <li><code>Defillama</code></li> <li><code>Naver</code></li> <li><code>Google</code></li> </ul> <p>All clients accept the same parameters that are described at Configuration section. First, import the clients,</p> <pre><code>from datamaxi.binance import Binance\nfrom datamaxi.defillama import Defillama\nfrom datamaxi.naver import Naver\nfrom datamaxi.google import Google\n</code></pre> <p>and initialize them.</p> <pre><code>binance = Binance(api_key=api_key)\ndefillama = Defillama(api_key=api_key)\nnaver = Naver(api_key=api_key)\ngoogle = Google(api_key=api_key)\n</code></pre>"},{"location":"#local-development","title":"Local Development","text":""},{"location":"#setup","title":"Setup","text":"<p>If you wish to work on local development please clone/fork the git repo and use <code>pip install -r requirements.txt</code> to setup the project.</p>"},{"location":"#testing","title":"Testing","text":"<pre><code># In case packages are not installed yet\npip install -r requirements/requirements-test.txt\n\npython -m pytest tests/\n</code></pre>"},{"location":"#links","title":"Links","text":"<ul> <li>DataMaxi+</li> <li>DataMaxi+ API</li> <li>DataMaxi+ API Documentation</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! If you discover a bug in this project, please feel free to open an issue to discuss the changes you would like to propose.</p>"},{"location":"#license","title":"License","text":"<p>MIT License</p>"},{"location":"api/","title":"DataMaxi+ API","text":""},{"location":"api/#datamaxi.api.API","title":"API","text":"<pre><code>API(\n    api_key=None,\n    base_url=None,\n    timeout=None,\n    proxies=None,\n    show_limit_usage=False,\n    show_header=False,\n)\n</code></pre> <p>             Bases: <code>object</code></p> <p>The base class for all DataMaxi+ Python clients. <code>api_key</code> can be set as an environment variable <code>NEVEREST_API_KEY</code>.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The API key for the DataMaxi+ API.</p> </li> <li> <code>base_url</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The base URL for the DataMaxi+ API.</p> </li> <li> <code>timeout</code>             (<code>int</code>, default:                 <code>None</code> )         \u2013          <p>The timeout for the requests.</p> </li> <li> <code>proxies</code>             (<code>dict</code>, default:                 <code>None</code> )         \u2013          <p>The proxies for the requests.</p> </li> <li> <code>show_limit_usage</code>             (<code>bool</code>, default:                 <code>False</code> )         \u2013          <p>Show the limit usage.</p> </li> <li> <code>show_header</code>             (<code>bool</code>, default:                 <code>False</code> )         \u2013          <p>Show the header.</p> </li> </ul>"},{"location":"binance/","title":"Binance Client","text":""},{"location":"binance/#datamaxi.binance.Binance","title":"Binance","text":"<pre><code>Binance(api_key=None, **kwargs: Any)\n</code></pre> <p>             Bases: <code>API</code></p> <p>Client to fetch Binance data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>             (<code>Any</code>, default:                 <code>{}</code> )         \u2013          <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"binance/#datamaxi.binance.Binance.kline","title":"kline","text":"<pre><code>kline(\n    symbol: str, interval: str = \"1d\", pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get Binance k-line data</p> <p><code>GET /v1/raw/binance/kline</code></p> <p>https://docs.datamaxiplus.com/cex/binance/kline</p> <p>Parameters:</p> <ul> <li> <code>symbol</code>             (<code>str</code>)         \u2013          <p>Binance symbol</p> </li> <li> <code>interval</code>             (<code>str</code>, default:                 <code>'1d'</code> )         \u2013          <p>Kline interval</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Binance kline data for a given symbol and interval in pandas DataFrame</p> </li> </ul>"},{"location":"binance/#datamaxi.binance.Binance.symbols","title":"symbols","text":"<pre><code>symbols() -&gt; List[str]\n</code></pre> <p>Supported Binance supported symbols</p> <p><code>GET /v1/raw/binance/symbols</code></p> <p>https://docs.datamaxiplus.com/cex/binance/symbols</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported Binance symbols</p> </li> </ul>"},{"location":"defillama/","title":"Defillama Client","text":""},{"location":"defillama/#datamaxi.defillama.Defillama","title":"Defillama","text":"<pre><code>Defillama(api_key=None, **kwargs: Any)\n</code></pre> <p>             Bases: <code>API</code></p> <p>Client to fetch Defillama data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>             (<code>Any</code>, default:                 <code>{}</code> )         \u2013          <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.chain_tvl","title":"chain_tvl","text":"<pre><code>chain_tvl(\n    chains: Union[str, List[str]] = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get TVL for given chains</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>chains</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single chain or multiple chain names</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of chain TVLs</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.chains","title":"chains","text":"<pre><code>chains() -&gt; List[str]\n</code></pre> <p>Get supported chains</p> <p><code>GET /v1/defillama/chain</code></p> <p>https://docs.datamaxiplus.com/defillama/chain</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported chains</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.fee","title":"fee","text":"<pre><code>fee(\n    protocols: Union[str, List[str]] = None,\n    chains: Union[str, List[str]] = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get fee for given protocols or chains</p> <p><code>GET /v1/defillama/fee</code></p> <p>https://docs.datamaxiplus.com/defillama/fee</p> <p>Parameters:</p> <ul> <li> <code>protocols</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single protocol or multiple protocol names</p> </li> <li> <code>chains</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single chain or multiple chain names</p> </li> <li> <code>daily</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>daily fee or total fee</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of protocol or fees</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.fee_detail","title":"fee_detail","text":"<pre><code>fee_detail(\n    protocol: str,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get fee detail for given protocol and chain</p> <p><code>GET /v1/defillama/fee/detail</code></p> <p>https://docs.datamaxiplus.com/defillama/fee-detail</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>             (<code>str</code>)         \u2013          <p>protocol name</p> </li> <li> <code>chain</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>chain name (optional)</p> </li> <li> <code>daily</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>daily fee or total fee</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of fee detail for a given protocol and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.pools","title":"pools","text":"<pre><code>pools() -&gt; List[str]\n</code></pre> <p>Get supported pools</p> <p><code>GET /v1/defillama/pool</code></p> <p>https://docs.datamaxiplus.com/defillama/pool</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported pools</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocol_chain_token_tvl","title":"protocol_chain_token_tvl","text":"<pre><code>protocol_chain_token_tvl(\n    protocol: str,\n    chain: str,\n    usd: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get token TVL on a given protocol and chain</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>             (<code>str</code>)         \u2013          <p>protocol name</p> </li> <li> <code>chain</code>             (<code>str</code>)         \u2013          <p>chain name</p> </li> <li> <code>usd</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Convert to USD otherwise return token amount</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of token TVL for a given protocol and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocol_chain_tvl","title":"protocol_chain_tvl","text":"<pre><code>protocol_chain_tvl(\n    protocol: str, chain: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get TVL for given protocol and chain</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>             (<code>str</code>)         \u2013          <p>protocol name</p> </li> <li> <code>chain</code>             (<code>str</code>)         \u2013          <p>chain name</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of protocol TVL on a given chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocol_mcap","title":"protocol_mcap","text":"<pre><code>protocol_mcap(\n    protocols: Union[str, List[str]] = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get market cap for given protocols</p> <p><code>GET /v1/defillama/mcap</code></p> <p>https://docs.datamaxiplus.com/defillama/mcap</p> <p>Parameters:</p> <ul> <li> <code>protocols</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single protocol or multiple protocol names</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of market cap for given protocols</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocol_token_tvl","title":"protocol_token_tvl","text":"<pre><code>protocol_token_tvl(\n    protocol: str, usd: bool = True, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get token TVL on a given protocol</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>             (<code>str</code>)         \u2013          <p>protocol name</p> </li> <li> <code>usd</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Convert to USD otherwise return token amount</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of token TVL for a given protocol</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocol_tvl","title":"protocol_tvl","text":"<pre><code>protocol_tvl(\n    protocols: Union[str, List[str]] = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get TVL for given protocols</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>protocols</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single protocol or multiple protocol names</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of protocol TVLs</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocols","title":"protocols","text":"<pre><code>protocols() -&gt; List[str]\n</code></pre> <p>Get supported protocols</p> <p><code>GET /v1/defillama/protocol</code></p> <p>https://docs.datamaxiplus.com/defillama/protocol</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported protocols</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.revenue","title":"revenue","text":"<pre><code>revenue(\n    protocols: Union[str, List[str]] = None,\n    chains: Union[str, List[str]] = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get revenue for given protocols or chains</p> <p><code>GET /v1/defillama/revenue</code></p> <p>https://docs.datamaxiplus.com/defillama/revenue</p> <p>Parameters:</p> <ul> <li> <code>protocols</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single protocol or multiple protocol names</p> </li> <li> <code>chains</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single chain or multiple chain names</p> </li> <li> <code>daily</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>daily revenue or total revenue</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of protocol or chain revenues</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.revenue_detail","title":"revenue_detail","text":"<pre><code>revenue_detail(\n    protocol: str,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get revenue detail for given protocol and chain</p> <p><code>GET /v1/defillama/revenue/detail</code></p> <p>https://docs.datamaxiplus.com/defillama/revenue-detail</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>             (<code>str</code>)         \u2013          <p>protocol name</p> </li> <li> <code>chain</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>chain name (optional)</p> </li> <li> <code>daily</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>daily revenue or total revenue</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of revenue detail for a given protocol and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoin_chain_mcap","title":"stablecoin_chain_mcap","text":"<pre><code>stablecoin_chain_mcap(\n    stablecoin: str, chain: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get market cap for a given stablecoin on a specific chain</p> <p><code>GET /v1/defillama/stablecoin</code></p> <p>https://docs.datamaxiplus.com/defillama/stablecoin-mcap</p> <p>Parameters:</p> <ul> <li> <code>stablecoin</code>             (<code>str</code>)         \u2013          <p>stablecoin name</p> </li> <li> <code>chain</code>             (<code>str</code>)         \u2013          <p>chain name</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of market cap for given stablecoin on a specific chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoin_mcap","title":"stablecoin_mcap","text":"<pre><code>stablecoin_mcap(\n    stablecoin: str = None, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get market cap for given stablecoin</p> <p><code>GET /v1/defillama/stablecoin</code></p> <p>https://docs.datamaxiplus.com/defillama/stablecoin-mcap</p> <p>Parameters:</p> <ul> <li> <code>stablecoin</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>stablecoin name</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of market cap for given stablecoin</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoin_price","title":"stablecoin_price","text":"<pre><code>stablecoin_price(\n    stablecoins: Union[str, List[str]] = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get price for given stablecoins</p> <p><code>GET /v1/defillama/stablecoin/price</code></p> <p>https://docs.datamaxiplus.com/defillama/stablecoin-price</p> <p>Parameters:</p> <ul> <li> <code>stablecoins</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single stablecoin or multiple stablecoin names</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of stablecoin prices</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoins","title":"stablecoins","text":"<pre><code>stablecoins() -&gt; List[str]\n</code></pre> <p>Get supported stablecoins</p> <p><code>GET /v1/defillama/stablecoin</code></p> <p>https://docs.datamaxiplus.com/defillama/stablecoin</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported stablecoins</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.token_price","title":"token_price","text":"<pre><code>token_price(\n    addresses: Union[str, List[str]] = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get token prices</p> <p><code>GET /v1/defillama/token</code></p> <p>https://docs.datamaxiplus.com/defillama/token-price</p> <p>Parameters:</p> <ul> <li> <code>addresses</code>             (<code>Union[str, List[str]]</code>, default:                 <code>None</code> )         \u2013          <p>single address or multiple addresses</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of token prices</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.tokens","title":"tokens","text":"<pre><code>tokens() -&gt; List[str]\n</code></pre> <p>Get supported tokens</p> <p><code>GET /v1/defillama/token</code></p> <p>https://docs.datamaxiplus.com/defillama/token</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported tokens</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.tvl","title":"tvl","text":"<pre><code>tvl(pandas: bool = True) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get total TVL across all chains and protocols</p> <p><code>GET /v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Timeseries of total TVL</p> </li> </ul>"},{"location":"google-trend/","title":"Google Trend Client","text":""},{"location":"google-trend/#datamaxi.google.Google","title":"Google","text":"<pre><code>Google(api_key=None, **kwargs: Any)\n</code></pre> <p>             Bases: <code>API</code></p> <p>Client to fetch Google trend data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>             (<code>Any</code>, default:                 <code>{}</code> )         \u2013          <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"google-trend/#datamaxi.google.Google.keywords","title":"keywords","text":"<pre><code>keywords() -&gt; List[str]\n</code></pre> <p>Get Google trend supported keywords</p> <p><code>GET /v1/google/keywords</code></p> <p>https://docs.datamaxi.finance/google/keywords</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported Google trend keywords</p> </li> </ul>"},{"location":"google-trend/#datamaxi.google.Google.trend","title":"trend","text":"<pre><code>trend(\n    keyword: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get Google trend for given keyword</p> <p><code>GET /v1/google/trend</code></p> <p>https://docs.datamaxi.finance/google/trend</p> <p>Parameters:</p> <ul> <li> <code>keyword</code>             (<code>str</code>)         \u2013          <p>keyword to search for</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Google trend data</p> </li> </ul>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 Bisonai</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"naver-trend/","title":"Naver Trend Client","text":""},{"location":"naver-trend/#datamaxi.naver.Naver","title":"Naver","text":"<pre><code>Naver(api_key=None, **kwargs: Any)\n</code></pre> <p>             Bases: <code>API</code></p> <p>Client to fetch Naver trend data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>             (<code>str</code>, default:                 <code>None</code> )         \u2013          <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>             (<code>Any</code>, default:                 <code>{}</code> )         \u2013          <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"naver-trend/#datamaxi.naver.Naver.keywords","title":"keywords","text":"<pre><code>keywords() -&gt; List[str]\n</code></pre> <p>Get Naver trend supported keywords</p> <p><code>GET /v1/naver/keywords</code></p> <p>https://docs.datamaxi.finance/naver/keywords</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>         \u2013          <p>List of supported Naver trend keywords</p> </li> </ul>"},{"location":"naver-trend/#datamaxi.naver.Naver.trend","title":"trend","text":"<pre><code>trend(\n    keyword: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get Naver trend for given keyword</p> <p><code>GET /v1/naver/trend</code></p> <p>https://docs.datamaxiplus.com/naver/trend</p> <p>Parameters:</p> <ul> <li> <code>keyword</code>             (<code>str</code>)         \u2013          <p>keyword to search for</p> </li> <li> <code>pandas</code>             (<code>bool</code>, default:                 <code>True</code> )         \u2013          <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>         \u2013          <p>Naver trend data</p> </li> </ul>"}]}