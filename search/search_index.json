{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DataMaxi+ Python Client","text":"<p>This is the official implementation of Python client for DataMaxi+ API. The package can be used to fetch both historical and latest data using DataMaxi+ API. This package is compatible with Python v3.8+.</p> <ul> <li>Installation</li> <li>Configuration</li> <li>Environment Variables</li> <li>Quickstart</li> <li>Local Development</li> <li>Setup</li> <li>Testing</li> <li>Links</li> <li>Contributing</li> <li>License</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip3 install datamaxi\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<p>Access to DataMaxi+ is protected by API Key. If you are interested to try DataMaxi+, you can simply sign up for DataMaxi+ through this login/singup page and get free API key for two months.</p> Option Explanation <code>api_key</code> Your API key <code>base_url</code> If <code>base_url</code> is not provided, it defaults to <code>api.datamaxiplus.com</code>. <code>timeout</code> Number of seconds to wait for a server response. By default requests do not time out. <code>proxies</code> Proxy through which the request is queried <code>show_limit_usage</code> Return response as dictionary including <code>\"limit_usage\"</code> and <code>\"data\"</code> keys <code>show_header</code> Return response as dictionary including <code>\"header\"</code> and <code>\"data\"</code> keys"},{"location":"#environment-variables","title":"Environment Variables","text":"<p>You may use environment variables to configure the DataMaxi+ client to avoid any inline boilerplate.</p> Env Description <code>DATAMAXI_API_KEY</code> Used instead of <code>api_key</code> if none is passed."},{"location":"#quickstart","title":"Quickstart","text":"<p>DataMaxi+ Python package currently includes the following clients:</p> <ul> <li><code>Datamaxi</code></li> <li><code>Defillama</code></li> <li><code>Naver</code></li> <li><code>Google</code></li> </ul> <p>All clients accept the same parameters that are described at Configuration section. First, import the clients,</p> <pre><code># Main client to access crypto trading data\nfrom datamaxi.datamaxi import Datamaxi\n\n# DeFi\nfrom datamaxi.defillama import Defillama\n\n# Trend\nfrom datamaxi.naver import Naver\nfrom datamaxi.google import Google\n</code></pre> <p>and initialize them.</p> <pre><code># Main client\nmaxi = Datamaxi(api_key=api_key)\n\n# DeFi\ndefillama = Defillama(api_key=api_key)\n\n# Trend\nnaver = Naver(api_key=api_key)\ngoogle = Google(api_key=api_key)\n</code></pre>"},{"location":"#local-development","title":"Local Development","text":""},{"location":"#setup","title":"Setup","text":"<p>If you wish to work on local development please clone/fork the git repo and use <code>pip install -r requirements.txt</code> to setup the project.</p>"},{"location":"#testing","title":"Testing","text":"<pre><code># In case packages are not installed yet\npip3 install -r requirements/requirements-test.txt\n\npython3 -m pytest tests/\n</code></pre>"},{"location":"#links","title":"Links","text":"<ul> <li>DataMaxi+</li> <li>DataMaxi+ API Documentation</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! If you discover a bug in this project, please feel free to open an issue to discuss the changes you would like to propose.</p>"},{"location":"#license","title":"License","text":"<p>MIT License</p>"},{"location":"api/","title":"DataMaxi+ API","text":""},{"location":"api/#datamaxi.api.API","title":"API","text":"<pre><code>API(\n    api_key=None,\n    base_url=None,\n    timeout=10,\n    proxies=None,\n    show_limit_usage=False,\n    show_header=False,\n)\n</code></pre> <p>               Bases: <code>object</code></p> <p>The base class for all DataMaxi+ Python clients. <code>api_key</code> can be set as an environment variable <code>DATAMAXI_API_KEY</code>.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The API key for the DataMaxi+ API.</p> </li> <li> <code>base_url</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The base URL for the DataMaxi+ API.</p> </li> <li> <code>timeout</code>               (<code>int</code>, default:                   <code>10</code> )           \u2013            <p>The timeout for the requests.</p> </li> <li> <code>proxies</code>               (<code>dict</code>, default:                   <code>None</code> )           \u2013            <p>The proxies for the requests.</p> </li> <li> <code>show_limit_usage</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>Show the limit usage.</p> </li> <li> <code>show_header</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>Show the header.</p> </li> </ul>"},{"location":"candle/","title":"Candle","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch candle data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"candle/#datamaxi.datamaxi.Candle.get","title":"get","text":"<pre><code>get(\n    exchange: str,\n    symbol: str,\n    interval: str = \"1d\",\n    market: str = \"spot\",\n    page: int = 1,\n    limit: int = 1000,\n    fromDateTime: str = None,\n    toDateTime: str = None,\n    sort: str = \"desc\",\n    pandas: bool = True,\n) -&gt; Union[\n    Tuple[Dict, Callable], Tuple[pd.DataFrame, Callable]\n]\n</code></pre> <p>Fetch candle data</p> <p><code>GET /api/v1/candle</code></p> <p>https://docs.datamaxiplus.com/api/datasets/candle/candle</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>interval</code>               (<code>str</code>, default:                   <code>'1d'</code> )           \u2013            <p>Candle interval</p> </li> <li> <code>market</code>               (<code>str</code>, default:                   <code>'spot'</code> )           \u2013            <p>Market type (spot/futures)</p> </li> <li> <code>page</code>               (<code>int</code>, default:                   <code>1</code> )           \u2013            <p>Page number</p> </li> <li> <code>limit</code>               (<code>int</code>, default:                   <code>1000</code> )           \u2013            <p>Limit of data</p> </li> <li> <code>fromDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Start date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>toDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>End date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>sort</code>               (<code>str</code>, default:                   <code>'desc'</code> )           \u2013            <p>Sort order</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Tuple[Dict, Callable], Tuple[DataFrame, Callable]]</code>           \u2013            <p>Candle data in pandas DataFrame and next request function</p> </li> </ul>"},{"location":"candle/#datamaxi.datamaxi.Candle.exchanges","title":"exchanges","text":"<pre><code>exchanges(market: str = 'spot') -&gt; List[str]\n</code></pre> <p>Fetch supported exchanges accepted by datamaxi.Candle.get API.</p> <p><code>GET /api/v1/candle/exchanges</code></p> <p>https://docs.datamaxiplus.com/api/datasets/candle/exchanges</p> <p>Parameters:</p> <ul> <li> <code>market</code>               (<code>str</code>, default:                   <code>'spot'</code> )           \u2013            <p>Market type (spot/futures)</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported exchanges</p> </li> </ul>"},{"location":"candle/#datamaxi.datamaxi.Candle.symbols","title":"symbols","text":"<pre><code>symbols(exchange: str, market: str = 'spot') -&gt; List[str]\n</code></pre> <p>Fetch supported symbols accepted by datamaxi.Candle.get API.</p> <p><code>GET /api/v1/candle/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/candle/symbols</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>market</code>               (<code>str</code>, default:                   <code>'spot'</code> )           \u2013            <p>Market type (spot/futures)</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported symbols</p> </li> </ul>"},{"location":"candle/#datamaxi.datamaxi.Candle.intervals","title":"intervals","text":"<pre><code>intervals(exchange: str, market: str = 'spot') -&gt; List[str]\n</code></pre> <p>Fetch supported intervals accepted by datamaxi.Candle.get API.</p> <p><code>GET /api/v1/candle/intervals</code></p> <p>https://docs.datamaxiplus.com/api/datasets/candle/intervals</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>market</code>               (<code>str</code>, default:                   <code>'spot'</code> )           \u2013            <p>Market type (spot/futures)</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported intervals</p> </li> </ul>"},{"location":"defillama/","title":"Defillama Client","text":""},{"location":"defillama/#datamaxi.defillama.Defillama","title":"Defillama","text":"<pre><code>Defillama(api_key=None, **kwargs: Any)\n</code></pre> <p>               Bases: <code>API</code></p> <p>Client to fetch Defillama data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.protocols","title":"protocols","text":"<pre><code>protocols() -&gt; List[str]\n</code></pre> <p>Get supported protocols</p> <p><code>GET /api/v1/defillama/protocol</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/protocol</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported protocols</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.chains","title":"chains","text":"<pre><code>chains() -&gt; List[str]\n</code></pre> <p>Get supported chains</p> <p><code>GET /api/v1/defillama/chain</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/chain</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported chains</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.pools","title":"pools","text":"<pre><code>pools() -&gt; List[str]\n</code></pre> <p>Get supported pools</p> <p><code>GET /api/v1/defillama/pool</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/pool</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported pools</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoins","title":"stablecoins","text":"<pre><code>stablecoins() -&gt; List[str]\n</code></pre> <p>Get supported stablecoins</p> <p><code>GET /api/v1/defillama/stablecoin</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/stablecoin</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported stablecoins</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.tvl","title":"tvl","text":"<pre><code>tvl(\n    protocol: str = None,\n    chain: str = None,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get total TVL across all chains and protocols</p> <p><code>GET /api/v1/defillama/tvl</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/tvl</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of total TVL</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.tvl_detail","title":"tvl_detail","text":"<pre><code>tvl_detail(\n    protocol: str,\n    chain: str = None,\n    token: bool = False,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get TVL detail for given protocol and chain</p> <p><code>GET /api/v1/defillama/tvl/detail</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/tvl-detail</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>)           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>token</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>Return token amount (return by default USD)</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of TVL detail for a given protocol and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.mcap","title":"mcap","text":"<pre><code>mcap(\n    protocol: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get market cap for given protocol</p> <p><code>GET /api/v1/defillama/mcap</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/mcap</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>)           \u2013            <p>Protocol name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of market cap for given protocol</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.pool_yield","title":"pool_yield","text":"<pre><code>pool_yield(\n    poolId: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get yield for given pool</p> <p><code>GET /api/v1/defillama/pool/yield</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/pool-yield</p> <p>Parameters:</p> <ul> <li> <code>poolId</code>               (<code>str</code>)           \u2013            <p>Pool ID</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of yield for given pool</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoin_mcap","title":"stablecoin_mcap","text":"<pre><code>stablecoin_mcap(\n    stablecoin: str, chain: str = None, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get market cap for given stablecoin and chain</p> <p><code>GET /api/v1/defillama/stablecoin/mcap</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/stablecoin-mcap</p> <p>Parameters:</p> <ul> <li> <code>stablecoin</code>               (<code>str</code>)           \u2013            <p>Stablecoin name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name (optional)</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of market cap for given stablecoin and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.stablecoin_price","title":"stablecoin_price","text":"<pre><code>stablecoin_price(\n    stablecoin: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get price for given stablecoin</p> <p><code>GET /api/v1/defillama/stablecoin/price</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/stablecoin-price</p> <p>Parameters:</p> <ul> <li> <code>stablecoin</code>               (<code>str</code>)           \u2013            <p>Stablecoin name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of stablecoin prices</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.fee","title":"fee","text":"<pre><code>fee(\n    protocol: str = None,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get fee for given protocol or chain</p> <p><code>GET /api/v1/defillama/fee</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/fee</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>daily</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Daily fee or total fee</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of protocol or fees</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.revenue","title":"revenue","text":"<pre><code>revenue(\n    protocol: str = None,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get revenue for given protocol or chain</p> <p><code>GET /api/v1/defillama/revenue</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/revenue</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>daily</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Daily revenue or total revenue</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of protocol or chain revenues</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.fee_detail","title":"fee_detail","text":"<pre><code>fee_detail(\n    protocol: str = None,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get fee detail for given protocol and chain</p> <p><code>GET /api/v1/defillama/fee/detail</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/fee-detail</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>daily</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Daily fee or total fee</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of fee detail for a given protocol and chain</p> </li> </ul>"},{"location":"defillama/#datamaxi.defillama.Defillama.revenue_detail","title":"revenue_detail","text":"<pre><code>revenue_detail(\n    protocol: str = None,\n    chain: str = None,\n    daily: bool = True,\n    pandas: bool = True,\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get revenue detail for given protocol and chain</p> <p><code>GET /api/v1/defillama/revenue/detail</code></p> <p>https://docs.datamaxiplus.com/api/datasets/defillama/revenue-detail</p> <p>Parameters:</p> <ul> <li> <code>protocol</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Protocol name</p> </li> <li> <code>chain</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Chain name</p> </li> <li> <code>daily</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Daily revenue or total revenue</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Timeseries of revenue detail for a given protocol and chain</p> </li> </ul>"},{"location":"dex-trade/","title":"DEX Trade","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch DEX trade data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"dex-trade/#datamaxi.datamaxi.DexTrade.get","title":"get","text":"<pre><code>get(\n    exchange: str,\n    symbol: str,\n    page: int = 1,\n    limit: int = 1000,\n    fromDateTime: str = None,\n    toDateTime: str = None,\n    sort: str = \"desc\",\n    pandas: bool = True,\n) -&gt; Union[\n    Tuple[Dict, Callable], Tuple[pd.DataFrame, Callable]\n]\n</code></pre> <p>Fetch DEX trade data</p> <p><code>GET /api/v1/dex/trade</code></p> <p>https://docs.datamaxiplus.com/api/datasets/dex-trade/trade</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>page</code>               (<code>int</code>, default:                   <code>1</code> )           \u2013            <p>Page number</p> </li> <li> <code>limit</code>               (<code>int</code>, default:                   <code>1000</code> )           \u2013            <p>Limit of data</p> </li> <li> <code>fromDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Start date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>toDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>End date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>sort</code>               (<code>str</code>, default:                   <code>'desc'</code> )           \u2013            <p>Sort order</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Tuple[Dict, Callable], Tuple[DataFrame, Callable]]</code>           \u2013            <p>DEX trade data in pandas DataFrame and next request function</p> </li> </ul>"},{"location":"dex-trade/#datamaxi.datamaxi.DexTrade.exchanges","title":"exchanges","text":"<pre><code>exchanges() -&gt; List[str]\n</code></pre> <p>Fetch supported exchanges accepted by datamaxi.DexTrade.get API.</p> <p><code>GET /api/v1/dex/trade/exchanges</code></p> <p>https://docs.datamaxiplus.com/api/datasets/dex-trade/exchanges</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported exchanges</p> </li> </ul>"},{"location":"forex/","title":"Forex","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch forex data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"forex/#datamaxi.datamaxi.Forex.get","title":"get","text":"<pre><code>get(\n    symbol: str, pandas: bool = True\n) -&gt; Union[Dict, pd.DataFrame]\n</code></pre> <p>Fetch forex data</p> <p><code>GET /api/v1/forex</code></p> <p>https://docs.datamaxiplus.com/api/datasets/forex/forex</p> <p>Parameters:</p> <ul> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Dict, DataFrame]</code>           \u2013            <p>Forex data in pandas DataFrame</p> </li> </ul>"},{"location":"forex/#datamaxi.datamaxi.Forex.symbols","title":"symbols","text":"<pre><code>symbols() -&gt; List[str]\n</code></pre> <p>Fetch supported symbols accepted by datamaxi.Forex.get API.</p> <p><code>GET /api/v1/forex/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/forex/symbols</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported symbols</p> </li> </ul>"},{"location":"funding-rate/","title":"Funding Rate","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch funding rate data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"funding-rate/#datamaxi.datamaxi.FundingRate.get","title":"get","text":"<pre><code>get(\n    exchange: str,\n    symbol: str,\n    page: int = 1,\n    limit: int = 1000,\n    fromDateTime: str = None,\n    toDateTime: str = None,\n    sort: str = \"desc\",\n    pandas: bool = True,\n) -&gt; Union[\n    Tuple[Dict, Callable], Tuple[pd.DataFrame, Callable]\n]\n</code></pre> <p>Fetch funding rate data</p> <p><code>GET /api/v1/funding-rate</code></p> <p>https://docs.datamaxiplus.com/api/datasets/funding-rate/funding-rate</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>page</code>               (<code>int</code>, default:                   <code>1</code> )           \u2013            <p>Page number</p> </li> <li> <code>limit</code>               (<code>int</code>, default:                   <code>1000</code> )           \u2013            <p>Limit of data</p> </li> <li> <code>fromDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Start date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>toDateTime</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>End date and time (accepts format \"2006-01-02 15:04:05\" or \"2006-01-02\")</p> </li> <li> <code>sort</code>               (<code>str</code>, default:                   <code>'desc'</code> )           \u2013            <p>Sort order</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Tuple[Dict, Callable], Tuple[DataFrame, Callable]]</code>           \u2013            <p>Funding rate data in pandas DataFrame and next request function</p> </li> </ul>"},{"location":"funding-rate/#datamaxi.datamaxi.FundingRate.exchanges","title":"exchanges","text":"<pre><code>exchanges() -&gt; List[str]\n</code></pre> <p>Fetch supported exchanges accepted by datamaxi.FundingRate.get API.</p> <p><code>GET /api/v1/funding-rate/exchanges</code></p> <p>https://docs.datamaxiplus.com/api/datasets/funding-rate/exchanges</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported exchanges</p> </li> </ul>"},{"location":"funding-rate/#datamaxi.datamaxi.FundingRate.symbols","title":"symbols","text":"<pre><code>symbols(exchange: str, market: str = 'spot') -&gt; List[str]\n</code></pre> <p>Fetch supported symbols accepted by datamaxi.FundingRate.get API.</p> <p><code>GET /api/v1/funding-rate/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/funding-rate/symbols</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported symbols</p> </li> </ul>"},{"location":"google-trend/","title":"Google Trend Client","text":""},{"location":"google-trend/#datamaxi.google.Google","title":"Google","text":"<pre><code>Google(api_key=None, **kwargs: Any)\n</code></pre> <p>               Bases: <code>API</code></p> <p>Client to fetch Google trend data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"google-trend/#datamaxi.google.Google.keywords","title":"keywords","text":"<pre><code>keywords() -&gt; List[str]\n</code></pre> <p>Get Google trend supported keywords</p> <p><code>GET /api/v1/google/keywords</code></p> <p>https://docs.datamaxiplus.com/api/datasets/trend/google/keywords</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported Google trend keywords</p> </li> </ul>"},{"location":"google-trend/#datamaxi.google.Google.trend","title":"trend","text":"<pre><code>trend(\n    keyword: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get Google trend for given keyword</p> <p><code>GET /api/v1/google/trend</code></p> <p>https://docs.datamaxiplus.com/api/datasets/trend/google/trend</p> <p>Parameters:</p> <ul> <li> <code>keyword</code>               (<code>str</code>)           \u2013            <p>keyword to search for</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Google trend data</p> </li> </ul>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 Bisonai</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"naver-trend/","title":"Naver Trend Client","text":""},{"location":"naver-trend/#datamaxi.naver.Naver","title":"Naver","text":"<pre><code>Naver(api_key=None, **kwargs: Any)\n</code></pre> <p>               Bases: <code>API</code></p> <p>Client to fetch Naver trend data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"naver-trend/#datamaxi.naver.Naver.symbols","title":"symbols","text":"<pre><code>symbols() -&gt; List[str]\n</code></pre> <p>Get Naver trend supported token symbols</p> <p><code>GET /api/v1/naver/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/trend/naver/symbols</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported Naver trend token symbols</p> </li> </ul>"},{"location":"naver-trend/#datamaxi.naver.Naver.trend","title":"trend","text":"<pre><code>trend(\n    symbol: str, pandas: bool = True\n) -&gt; Union[List, pd.DataFrame]\n</code></pre> <p>Get Naver trend for given token symbol</p> <p><code>GET /api/v1/naver/trend</code></p> <p>https://docs.datamaxiplus.com/api/datasets/trend/naver/trend</p> <p>Parameters:</p> <ul> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>token symbol to search for</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[List, DataFrame]</code>           \u2013            <p>Naver trend data</p> </li> </ul>"},{"location":"premium/","title":"Premium","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch premium data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"premium/#datamaxi.datamaxi.Premium.get","title":"get","text":"<pre><code>get(\n    sourceExchange: str,\n    targetExchange: str,\n    symbol: str,\n    pandas: bool = True,\n) -&gt; Union[Dict, pd.DataFrame]\n</code></pre> <p>Fetch premium data</p> <p><code>GET /api/v1/premium</code></p> <p>https://docs.datamaxiplus.com/api/datasets/premium/premium</p> <p>Parameters:</p> <ul> <li> <code>sourceExchange</code>               (<code>str</code>)           \u2013            <p>Source exchange name</p> </li> <li> <code>targetExchange</code>               (<code>str</code>)           \u2013            <p>Target exchange name</p> </li> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Dict, DataFrame]</code>           \u2013            <p>Premium data in pandas DataFrame</p> </li> </ul>"},{"location":"premium/#datamaxi.datamaxi.Premium.exchanges","title":"exchanges","text":"<pre><code>exchanges() -&gt; List[str]\n</code></pre> <p>Fetch supported exchanges accepted by datamaxi.Premium.get API.</p> <p><code>GET /api/v1/Premium/exchanges</code></p> <p>https://docs.datamaxiplus.com/api/datasets/Premium/exchanges</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported exchange</p> </li> </ul>"},{"location":"premium/#datamaxi.datamaxi.Premium.symbols","title":"symbols","text":"<pre><code>symbols(\n    sourceExchange: str, targetExchange: str\n) -&gt; List[str]\n</code></pre> <p>Fetch supported symbols accepted by datamaxi.Premium.get API.</p> <p><code>GET /api/v1/premium/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/premium/symbols</p> <p>Parameters:</p> <ul> <li> <code>sourceExchange</code>               (<code>str</code>)           \u2013            <p>Source exchange name</p> </li> <li> <code>targetExchange</code>               (<code>str</code>)           \u2013            <p>Target exchange name</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported symbols</p> </li> </ul>"},{"location":"ticker/","title":"Ticker","text":"<p>               Bases: <code>API</code></p> <p>Client to fetch ticker data from DataMaxi+ API.</p> <p>Parameters:</p> <ul> <li> <code>api_key</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>The DataMaxi+ API key</p> </li> <li> <code>**kwargs</code>               (<code>Any</code>, default:                   <code>{}</code> )           \u2013            <p>Keyword arguments used by <code>datamaxi.api.API</code>.</p> </li> </ul>"},{"location":"ticker/#datamaxi.datamaxi.Ticker.get","title":"get","text":"<pre><code>get(\n    exchange: str, symbol: str, pandas: bool = True\n) -&gt; Union[Dict, pd.DataFrame]\n</code></pre> <p>Fetch ticker data</p> <p><code>GET /api/v1/ticker</code></p> <p>https://docs.datamaxiplus.com/api/datasets/ticker/ticker</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> <li> <code>symbol</code>               (<code>str</code>)           \u2013            <p>Symbol name</p> </li> <li> <code>pandas</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>Return data as pandas DataFrame</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Union[Dict, DataFrame]</code>           \u2013            <p>Ticker data in pandas DataFrame</p> </li> </ul>"},{"location":"ticker/#datamaxi.datamaxi.Ticker.exchanges","title":"exchanges","text":"<pre><code>exchanges() -&gt; List[str]\n</code></pre> <p>Fetch supported exchanges accepted by datamaxi.Ticker.get API.</p> <p><code>GET /api/v1/ticker/exchanges</code></p> <p>https://docs.datamaxiplus.com/api/datasets/ticker/exchanges</p> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported exchange</p> </li> </ul>"},{"location":"ticker/#datamaxi.datamaxi.Ticker.symbols","title":"symbols","text":"<pre><code>symbols(exchange: str) -&gt; List[str]\n</code></pre> <p>Fetch supported symbols accepted by datamaxi.Ticker.get API.</p> <p><code>GET /api/v1/ticker/symbols</code></p> <p>https://docs.datamaxiplus.com/api/datasets/ticker/symbols</p> <p>Parameters:</p> <ul> <li> <code>exchange</code>               (<code>str</code>)           \u2013            <p>Exchange name</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[str]</code>           \u2013            <p>List of supported symbols</p> </li> </ul>"}]}